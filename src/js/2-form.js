const feedbackForm = document.querySelector('.feedback-form');
const emailInput = feedbackForm.elements.email;
const messageInput = feedbackForm.elements.message;
const localStorageKey = "feedback-form-state";
const maxCount = 400;
const regex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;
const errorMessage = document.getElementById('email-error');
const countNumber = document.getElementById('countNumber');
 

let formData = {
    email: "",
    message: ""
};

// –ü–∞—Ä—Å–∏–º–æ –ª–æ–∫–∞–ª—å–Ω–µ —Å—Ö–æ–≤–∏—â–µ –∑ –ø–æ—Ç—Ä—ñ–±–Ω–∏–º –Ω–∞–º –∫–ª—é—á–µ–º —ñ –≤–∏—Ç—è–≥—É—î–º –∑ –Ω—å–æ–≥–æ –¥–∞–Ω—ñ –≤ FormData
const savedData = JSON.parse(localStorage.getItem(localStorageKey)) || {};
formData = {
    
    email: savedData.email || "",
    message: savedData.message || "",
};
console.log("üöÄ ~ formData:", formData);

// –∑–∞–ø–æ–≤–Ω—é—î–º–æ –¥–∞–Ω—ñ –ø–æ–ª—ñ–≤ –≤–≤–æ–¥—É
emailInput.value = formData.email;
messageInput.value = formData.message;
if (emailInput.value) {
    validateEmail(formData.email);
} 

//–î–æ–¥–∞—î–º–æ —Å–ª—É—Ö–∞—á–∞ –Ω–∞ input —ñ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—á–∏ –¥–µ–ª–µ–≥—É–≤–∞–Ω–Ω—è –≤—ñ—à–∞—î–º –π–æ–≥–æ –Ω–∞ —Ñ–æ—Ä–º—É
feedbackForm.addEventListener('input', saveToLocalStr)

function saveToLocalStr(event) {
    // –∑–∞–ø–∏—Å—É—î–º–æ –∑–Ω–∞—á–µ–Ω–Ω—è —ñ–Ω–ø—É—Ç –≤ formData, –ø–µ—Ä–µ–¥ –∑–∞–ø–∏—Å–æ–º –ø–æ–∑–±—É–≤–∞—î–º–æ—Å—è –ª–∏—à–Ω—ñ—Ö –∑–Ω–∞–∫—ñ–≤ —Ç–∞–±—É–ª—è—Ü—ñ—ó(–ø—Ä–æ–±—ñ–ª —ñ –µ–Ω—Ç–µ—Ä)
    formData[event.target.name] = event.target.value.trim();
    console.log("üöÄ ~ feedbackForm.addEventListener ~  formData:", formData);
    
    validateEmail(formData.email);
     counterNumber(formData.message);
    // –∑–∞–ø–∏—Å—É—î–º–æ –∑–Ω–∞—á–µ–Ω–Ω—è formData –ª–æ–∫–∞–ª—å–Ω–µ —Å—Ö–æ–≤–∏—â–µ
   
         localStorage.setItem(localStorageKey, JSON.stringify(formData));
    console.log("üöÄ ~ feedbackForm.addEventListener ~ localStorage:", localStorage)

};
    
// –î–æ–¥–∞—î–º–æ —Å–ª—É—Ö–∞—á–∞ –Ω–∞ –∫–Ω–æ–ø–∫—É submit, –ø–µ—Ä–µ–≤—ñ—Ä–∫—É –Ω–∞ –ø—É—Å—Ç—ñ –ø–æ–ª—è, —è–∫—â–æ –≤—Å–µ –æ–∫: –≤–∏–≤–æ–¥–∏–º–æ –¥–∞–Ω—ñ –≤ –∫–æ–Ω—Å–æ–ª—å —ñ –≤—Å–µ –æ—á–∏—â—É—î–º–æ
feedbackForm.addEventListener('submit', (event) => {
    event.preventDefault();
    if (!formData.email || !formData.message) {
       return alert("Fill please all fields");    
    }
    console.log("formData:", formData);
    localStorage.removeItem(localStorageKey);
    formData.email = '';
    formData.message = '';
    feedbackForm.reset();
    
})
   
function validateEmail(email) {
    const isError = document.querySelector(".error-message")
    if (!email) {
         emailInput.classList.remove('error');
    errorMessage.classList.remove('error-message');
        errorMessage.textContent = ('');
        return
    }
   if (!regex.test(email)) {
       console.log("üöÄ ~ validateEmail ~ !regex.test(email):", !regex.test(email))
       emailInput.classList.add('error');
       errorMessage.classList.add('error-message');
       errorMessage.textContent = "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∏–π –∞–±–æ –Ω–µ–ø–æ–≤–Ω–∏–π email! –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ñ—Å—Ç—å –≤–≤–æ–¥—É!";  
   } else {
       emailInput.classList.remove('error');
       errorMessage.classList.remove('error-message');
       errorMessage.textContent = ('');
   }

}

function counterNumber(message) {
    const currentLength = messageInput.value.length;
   countNumber.textContent = `${currentLength}/${maxCount}`
 
}
